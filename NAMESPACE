# Generated by roxygen2: do not edit by hand

export(annotation)
export(annotation_2_json)
export(annotation_combinations)
export(annotation_gene_table)
export(assign_colors)
export(assign_communities)
export(cc_graph)
export(combine_annotation_features)
export(combine_text)
export(combined_coefficient)
export(combined_significant_calls)
export(combined_statistics)
export(count_go_children)
export(csv_annotation_table)
export(enriched_result)
export(executable_path)
export(extract_statistics)
export(filter_annotation_graph)
export(generate_annotation_graph)
export(generate_annotation_similarity_graph)
export(generate_colors)
export(generate_legend)
export(generate_link)
export(generate_piecharts)
export(generate_table)
export(get_db_annotation)
export(get_significant_annotations)
export(get_significant_annotations_calls)
export(graph_to_visnetwork)
export(have_parallel)
export(hypergeometric_basic)
export(hypergeometric_feature_enrichment)
export(install_executables)
export(jaccard_coefficient)
export(json_2_annotation)
export(json_annotation_reversal)
export(kable_annotation_table)
export(label_communities)
export(label_go_communities)
export(multi_query_list)
export(overlap_coefficient)
export(significant_annotations)
export(table_from_graph)
export(vis_in_cytoscape)
export(vis_visnetwork)
exportClasses(combined_enrichment)
exportClasses(hypergeom_features)
exportClasses(node_assign)
exportClasses(statistical_results)
exportMethods(annotation_combinations)
exportMethods(combine_annotations)
exportMethods(combine_enrichments)
exportMethods(extract_statistics)
exportMethods(generate_annotation_graph)
exportMethods(generate_table)
exportMethods(get_significant_annotations)
exportMethods(remove_edges)
exportMethods(show)
import(Cairo)
import(GO.db)
import(RCy3)
import(graph)
importFrom(DiagrammeR,create_edge_df)
importFrom(DiagrammeR,create_graph)
importFrom(DiagrammeR,create_node_df)
importFrom(base64enc,dataURI)
importFrom(colorspace,desaturate)
importFrom(colorspace,rainbow_hcl)
importFrom(igraph,cluster_walktrap)
importFrom(igraph,membership)
importFrom(jsonlite,fromJSON)
importFrom(jsonlite,toJSON)
